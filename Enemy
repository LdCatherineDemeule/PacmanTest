
using UnityEngine;

public class NME : MonoBehaviour
{
    public Transform corner;
    Vector3 direction = Vector2.left;
    float maxRayDistance = 0.17f;
    float speed = 0.6f;
    RaycastHit hit;
    SphereCollider coll;
    Vector3 startPosition;
    Vector2 rightVec;

    public float delayStart;
    float delayStKeep;
    float startSpeed = 0;
    public bool hasStarted;

    float delay;
    public bool allowTurn = true;

    public bool chase;
    public bool scatter = true;
    public bool frightened ;

    bool lockState;

    bool[] states = new bool[3];

    float angle;

    void Start()
    {
        coll = gameObject.transform.GetComponent<SphereCollider>();
        startPosition = gameObject.transform.position;
        delayStKeep = delayStart;
        SaveStates();
    }


    void Update()
    {
        if (GameManager.instance.avatar.isHero && !lockState)
        {
            SaveStates();
            direction *= -1;
            frightened = true;
            scatter = false;
            chase = false;
            lockState = true;
        }
        else if (!GameManager.instance.avatar.isHero && lockState)
        {
            ChangeState();
            lockState = false;
        }

        if (scatter)
        {
            if (CheckDistance(corner.transform.position, transform.position) < 0.1f)
            {
                direction *= -1;
                chase = true;
                scatter = false;
                frightened = false;
                SaveStates();
            }
        }

        Physics.Raycast(transform.position, direction, out hit, maxRayDistance);

        if (hit.collider)
        {
            if (frightened)
                ChangeDirection();
            else if (chase)
                ChangeDirectionChase();
            else if (scatter)
                ChangeDirectionScatter();
        }   

        transform.Translate(direction * startSpeed * Time.deltaTime);

        if (delay > 0)
            Timer();

        if(!hasStarted)
        if (delayStart > 0)
            Timer();

    }

    public void ChangeDirection()
    {
        if (allowTurn)
        {
            RaycastHit doubleCheck;

            int newD = Probability(3);
            if (newD == 0 && direction != Vector3.down)
            {
                Physics.Raycast(transform.position, Vector2.up, out doubleCheck, maxRayDistance);
                if (doubleCheck.collider == null)
                {
                    direction = Vector2.up;
                }

                else
                    ChangeDirection();
            }
            else
                if (newD == 1 && direction != Vector3.up)
            {
                Physics.Raycast(transform.position, Vector2.down, out doubleCheck, maxRayDistance);
                if (doubleCheck.collider == null)
                {
                    direction = Vector2.down;
                }
                else
                    ChangeDirection();
            }
            else
                if (newD == 2 && direction != Vector3.left)
            {
                Physics.Raycast(transform.position, Vector2.right, out doubleCheck, maxRayDistance);
                if (doubleCheck.collider == null)
                {
                    direction = Vector2.right;
                }

                else
                    ChangeDirection();
            }
            else
            {
                if (direction != Vector3.right)
                {
                    Physics.Raycast(transform.position, Vector2.left, out doubleCheck, maxRayDistance);
                    if (doubleCheck.collider == null)
                    {
                        direction = Vector2.left;
                    }
                    else
                        ChangeDirection();
                }

            }
            allowTurn = false;
            ResetChange();
        }
    }

    public void ChangeDirectionChase()
    {
        if (allowTurn)
        {
            CheckAngle(GameManager.instance.avatar.transform);
            if (angle > 30)
            {
                if (direction == Vector3.up)
                {
                    if (CheckDouble(Vector2.right) != Vector2.zero)
                        direction = Vector2.right;
                    else
                    {
                        if (CheckDouble(Vector2.up) != Vector2.zero)
                            direction = Vector2.up;
                        else
                            direction = Vector2.left;
                    }
                }
                else
                if (direction == Vector3.right)
                {
                    if (CheckDouble(Vector2.down) != Vector2.zero)
                        direction = Vector2.down;
                    else
                    {
                        if (CheckDouble(Vector2.right) != Vector2.zero)
                            direction = Vector2.right;
                        else
                            direction = Vector2.up;
                    }
                }
                else
                if (direction == Vector3.left)
                {
                    if (CheckDouble(Vector2.up) != Vector2.zero)
                        direction = Vector2.up;
                    else
                    {
                        if (CheckDouble(Vector2.left) != Vector2.zero)
                            direction = Vector2.left;
                        else
                            direction = Vector2.down;
                    }
                }
                else
                {
                    if (CheckDouble(Vector2.left) != Vector2.zero)
                        direction = Vector2.left;
                    else
                    {
                        if (CheckDouble(Vector2.down) != Vector2.zero)
                            direction = Vector2.down;
                        else
                            direction = Vector2.right;
                    }

                }
                allowTurn = false;
                ResetChange();
            }
            else
                if (angle < -30)
                {
                    if (direction == Vector3.up)
                    {
                        if (CheckDouble(Vector2.left) != Vector2.zero)
                            direction = Vector2.left;
                        else
                        {
                            if (CheckDouble(Vector2.up) != Vector2.zero)
                                direction = Vector2.up;
                            else
                                direction = Vector2.right;
                        }
                    }
                else
                if (direction == Vector3.right)
                {
                    if (CheckDouble(Vector2.up) != Vector2.zero)
                        direction = Vector2.up;
                    else
                    {
                        if (CheckDouble(Vector2.right) != Vector2.zero)
                            direction = Vector2.right;
                        else
                            direction = Vector2.down;
                    }
                }
                else
                if (direction == Vector3.left)
                {
                    if (CheckDouble(Vector2.down) != Vector2.zero)
                        direction = Vector2.down;
                    else
                    {
                        if (CheckDouble(Vector2.left) != Vector2.zero)
                            direction = Vector2.left;
                        else
                            direction = Vector2.up;
                    }
                }
                else
                {
                    if (CheckDouble(Vector2.right) != Vector2.zero)
                        direction = Vector2.right;
                    else
                    {
                        if (CheckDouble(Vector2.down) != Vector2.zero)
                            direction = Vector2.down;
                        else
                            direction = Vector2.left;
                    }

                }
                allowTurn = false;
                ResetChange();
            }
            else
            {
                if (direction == Vector3.up)
                {
                    if (CheckDouble(Vector2.up) != Vector2.zero)
                        direction = Vector2.up;
                    else
                    {
                        if (CheckDouble(Vector2.right) != Vector2.zero)
                            direction = Vector2.right;
                        else
                            direction = Vector2.left;
                    }
                }
                else
                if (direction == Vector3.right)
                {
                    if (CheckDouble(Vector2.right) != Vector2.zero)
                        direction = Vector2.right;
                    else
                    {
                        if (CheckDouble(Vector2.down) != Vector2.zero)
                            direction = Vector2.down;
                        else
                            direction = Vector2.up;
                    }
                }
                else
                if (direction == Vector3.left)
                {
                    if (CheckDouble(Vector2.left) != Vector2.zero)
                        direction = Vector2.left;
                    else
                    {
                        if (CheckDouble(Vector2.up) != Vector2.zero)
                            direction = Vector2.up;
                        else
                            direction = Vector2.down;
                    }
                }
                else
                {
                    if (CheckDouble(Vector2.right) != Vector2.zero)
                        direction = Vector2.right;
                    else
                    {
                        if (CheckDouble(Vector2.down) != Vector2.zero)
                            direction = Vector2.down;
                        else
                            direction = Vector2.left;
                    }

                }
                allowTurn = false;
                ResetChange();
            }
        }
    }

    public void ChangeDirectionScatter()
    {
        if (allowTurn)
        {
                CheckAngle(corner);
                if (angle > 30)
                {
                    if (direction == Vector3.up)
                    {
                        if (CheckDouble(Vector2.right) != Vector2.zero)
                            direction = Vector2.right;
                        else
                        {
                            if (CheckDouble(Vector2.up) != Vector2.zero)
                                direction = Vector2.up;
                            else
                                direction = Vector2.left;
                        }
                    }
                    else
                    if (direction == Vector3.right)
                    {
                        if (CheckDouble(Vector2.down) != Vector2.zero)
                            direction = Vector2.down;
                        else
                        {
                            if (CheckDouble(Vector2.right) != Vector2.zero)
                                direction = Vector2.right;
                            else
                                direction = Vector2.up;
                        }
                    }
                    else
                    if (direction == Vector3.left)
                    {
                        if (CheckDouble(Vector2.up) != Vector2.zero)
                            direction = Vector2.up;
                        else
                        {
                            if (CheckDouble(Vector2.left) != Vector2.zero)
                                direction = Vector2.left;
                            else
                                direction = Vector2.down;
                        }
                    }
                    else
                    {
                        if (CheckDouble(Vector2.left) != Vector2.zero)
                            direction = Vector2.left;
                        else
                        {
                            if (CheckDouble(Vector2.down) != Vector2.zero)
                                direction = Vector2.down;
                            else
                                direction = Vector2.right;
                        }

                    }
                    allowTurn = false;
                    ResetChange();
                }
                else
                    if (angle < -30)
                {
                    if (direction == Vector3.up)
                    {
                        if (CheckDouble(Vector2.left) != Vector2.zero)
                            direction = Vector2.left;
                        else
                        {
                            if (CheckDouble(Vector2.up) != Vector2.zero)
                                direction = Vector2.up;
                            else
                                direction = Vector2.right;
                        }
                    }
                    else
                if (direction == Vector3.right)
                    {
                        if (CheckDouble(Vector2.up) != Vector2.zero)
                            direction = Vector2.up;
                        else
                        {
                            if (CheckDouble(Vector2.right) != Vector2.zero)
                                direction = Vector2.right;
                            else
                                direction = Vector2.down;
                        }
                    }
                    else
                if (direction == Vector3.left)
                    {
                        if (CheckDouble(Vector2.down) != Vector2.zero)
                            direction = Vector2.down;
                        else
                        {
                            if (CheckDouble(Vector2.left) != Vector2.zero)
                                direction = Vector2.left;
                            else
                                direction = Vector2.up;
                        }
                    }
                    else
                    {
                        if (CheckDouble(Vector2.right) != Vector2.zero)
                            direction = Vector2.right;
                        else
                        {
                            if (CheckDouble(Vector2.down) != Vector2.zero)
                                direction = Vector2.down;
                            else
                                direction = Vector2.left;
                        }

                    }
                    allowTurn = false;
                    ResetChange();
                }
                else
                {
                    if (direction == Vector3.up)
                    {
                        if (CheckDouble(Vector2.up) != Vector2.zero)
                            direction = Vector2.up;
                        else
                        {
                            if (CheckDouble(Vector2.right) != Vector2.zero)
                                direction = Vector2.right;
                            else
                                direction = Vector2.left;
                        }
                    }
                    else
                    if (direction == Vector3.right)
                    {
                        if (CheckDouble(Vector2.right) != Vector2.zero)
                            direction = Vector2.right;
                        else
                        {
                            if (CheckDouble(Vector2.down) != Vector2.zero)
                                direction = Vector2.down;
                            else
                                direction = Vector2.up;
                        }
                    }
                    else
                    if (direction == Vector3.left)
                    {
                        if (CheckDouble(Vector2.left) != Vector2.zero)
                            direction = Vector2.left;
                        else
                        {
                            if (CheckDouble(Vector2.up) != Vector2.zero)
                                direction = Vector2.up;
                            else
                                direction = Vector2.down;
                        }
                    }
                    else
                    {
                        if (CheckDouble(Vector2.right) != Vector2.zero)
                            direction = Vector2.right;
                        else
                        {
                            if (CheckDouble(Vector2.down) != Vector2.zero)
                                direction = Vector2.down;
                            else
                                direction = Vector2.left;
                        }

                    }
                    allowTurn = false;
                    ResetChange();
                }
        }
    }

    float CheckDistance(Vector3 firstPos, Vector3 secPos)
    {
        return (Vector3.Distance(firstPos, secPos));
    }

    void ChangeState()
    {
        chase = states[0];
        scatter = states[1];
        frightened = states[2];
    }

    void SaveStates()
    {
        states[0] = chase;
        states[1] = scatter;
        states[2] = frightened;
    }
    void CheckAngle(Transform target)
    {
        rightVec = transform.position - target.transform.position;
        Vector3 targetDir = target.transform.position - transform.position;
        angle = Vector3.Angle(targetDir, direction);
        if (!IsRight(direction, rightVec))
            angle *= -1;
    }

    Vector2 CheckDouble(Vector2 vec)
    {
        RaycastHit doubleCheck;
        Physics.Raycast(transform.position, vec, out doubleCheck, maxRayDistance);
        if (doubleCheck.collider == null)
        {
            return vec;
        }
        return Vector2.zero;
    }

    int Probability(int i)
    {
        int newN = Random.Range(0, i);
        return newN;
    }
    void Timer()
    {
        delay -= Time.deltaTime;
        if (delay < 0)
            ConsequenceTimer();
        if(!hasStarted)
        {
            delayStart -= Time.deltaTime;
            if (delayStart < 0)
                StartRacePac();
        }
    }

    void ConsequenceTimer()
    {
        allowTurn = true;
    }

    void ResetChange()
    {
        delay = 0.4f;
        Timer();
    }

    void StartRacePac()
    {
        hasStarted = true;
        startSpeed = speed;
    }

    void RespawnNME()
    {
        transform.position = startPosition;
    }

    public void RespawnAfterDeath()
    {
        startSpeed = 0;
        RespawnNME();
        hasStarted = false;
        delayStart = delayStKeep;
        frightened = false;
        scatter = true;
        chase = false;
    }

    void OnTriggerEnter(Collider other)
    {
        if (other.CompareTag("Player"))
        {
            if (GameManager.instance.avatar.isHero)
                RespawnNME();
            else
                GameManager.instance.avatar.DeathEvents();
        }
    }

    bool IsRight(Vector2 A, Vector2 B)
    {
        return -A.x * B.y + A.y * B.x < 0;
    }
}
